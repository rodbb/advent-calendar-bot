name: Build Application

on:
  push:
    tags: ['v*.*.*']

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        shell: ${{ (matrix.os == 'windows-latest' && 'bash') || 'sh' }}
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@main
      name: Setup Haskell
      with:
        ghc-version: '8.10.7'
        enable-stack: true
        stack-version: 'latest'
    - name: Set STACK_ROOR env on Linux
      if: matrix.os == 'ubuntu-latest'
      run: echo "STACK_ROOT=$(stack --system-ghc path --stack-root)" >> $GITHUB_ENV
    - name: Cache .stack
      id: cache-stack
      uses: actions/cache@v2
      with:
        path: ${{ env.STACK_ROOT }}
        key: ${{ runner.os }}-stack-${{ hashFiles('**/stack.yaml.lock') }}-${{ hashFiles('**/package.yaml') }}
        restore-keys: |
          ${{ runner.os }}-stack-${{ hashFiles('**/stack.yaml.lock') }}-
          ${{ runner.os }}-stack-

    - name: Install dependencies
      run: stack --system-ghc test --only-dependencies
    - name: Build and Test
      run: stack --system-ghc test --copy-bins --local-bin-path=./${{ github.event.repository.name }}

    - name: Artifact basename
      id: artifact
      run: |
        echo ::set-output name=basename::${{ github.event.repository.basename }}-${{ runner.OS }}
        echo ::set-output name=extension::${{ (matrix.os == 'windows-latest' && 'zip') || 'tar.gz' }}
    - name: Compress on Linux
      if: matrix.os == 'ubuntu-latest'
      run: tar zcvf ${{ steps.artifact.output.basename }}.${{ steps.artifact.output.extension }} ${{ github.event.repository.name }}
    - name: Compress on Windows
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive `
        -Path ${{ github.event.repository.name }} `
        -DestinationPath ${{ steps.artifact.output.basename }}.${{ steps.artifact.output.extension }}
      shell: powershell
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        generate_release_notes: true
        files: ${{ steps.artifact.output.basename }}.${{ steps.artifact.output.extension }}
